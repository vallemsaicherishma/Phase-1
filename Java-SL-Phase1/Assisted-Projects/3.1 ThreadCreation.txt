//1. Mythread

package Thread;
public class My_Thread extends Thread
{
 	public void run()
 	{
  		System.out.println("concurrent thread started running..");
}
 	public static void main( String args[] )
 	{
  		My_Thread mt = new  My_Thread();
  		mt.start();
 	}
}


//2.Runnable thread

package Thread;
public class Runnable_thread implements Runnable{
 
    public static int myCount = 0;
    public Runnable_thread(){
         
    }
    public void run() {
        while(Runnable_thread.myCount <= 10){
            try{
                System.out.println("Expl Thread: "+(++Runnable_thread.myCount));
                Thread.sleep(95);
            } catch (InterruptedException iex) {
                System.out.println("Exception in thread: "+iex.getMessage());
            }
        }
    } 
    public static void main(String a[]){
        System.out.println("Starting Main Thread...");
        Runnable_thread mrt = new Runnable_thread();
        Thread t = new Thread(mrt);
        t.start();
        while(Runnable_thread.myCount <= 10){
            try{
                System.out.println("Main Thread: "+(++Runnable_thread.myCount));
                Thread.sleep(95);
            } catch (InterruptedException iex){
                System.out.println("Exception in main thread: "+iex.getMessage());
            }
        }
        System.out.println("End of Main Thread...");
    }
}


//3. Thread

package Thread;

class ThreadClass implements Runnable{
thread thread;
String threadName;
ThreadClass(String name)
{
	this.threadName=name;
	System.out.println("creating thread"+this.threadName);
	
}public void run()
{
	System.out.println("Running thread"+this.threadName);
	try {
		for (int i=5;i>0;i--) {
			System.out.println("Thread Name"+this.threadName +""+i);
			Thread.sleep(50);
		}
	}
	catch(InterruptedException e)
	{
		System.out.println("Thread with name "+this.threadName+"is stoprd in betwwen");
		
	}
	System.out.println("thread with thread name"+this.threadName+"exited");
	
} public void start()
{
System.out.println("stsrting thread with thread name"+this.threadName);
if(thread==null) {
	thread=new thread();
	thread.start();
	}
}

}
public class thread{
	public static void main(String args[]) {
		ThreadClass t1=new ThreadClass("thread1");
		t1.start();
		ThreadClass t2=new ThreadClass("thread2");
		t2.start();
	}

	public void start() {
		// TODO Auto-generated method stub
		
	}
}